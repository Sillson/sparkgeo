% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_join.R
\name{spatial_join}
\alias{spatial_join}
\title{Spatial Join}
\usage{
spatial_join(x, y, latitude, longitude, polygon)
}
\arguments{
\item{x}{\code{tbl} to join.}

\item{y}{\code{tbl} to join.}

\item{latitude}{Latitude variable.}

\item{longitude}{Longitude variable.}

\item{polygon}{Polygon variable as usually provided by
\code{\link{spark_read_geojson}}.}
}
\value{
\code{tbl} resulting from the spatial join.
}
\description{
Spatially joins two \code{tbl}.
}
\note{
The current implementation performs a cartesian product with a
subsequent filter since generic joins are not currently available in
\pkg{dplyr} (see https://github.com/tidyverse/dplyr/issues/2240).
Spark SQL's Catalyst optimizer seems to be able to optimize this
in a way it is not necessary to compute a full cartesian product.
}
\references{
\url{https://github.com/harsha2010/magellan}
}
